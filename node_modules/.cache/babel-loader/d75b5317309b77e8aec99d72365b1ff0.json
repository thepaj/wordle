{"ast":null,"code":"var _jsxFileName = \"/home/bill/Documents/GitHub/wordle/src/components/Keyboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Key from './Key';\nimport words from '../utils/words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Keyboard(props) {\n  _s();\n\n  const [letters, setLetters] = useState('');\n  const [includedLetters, setIncludedLetters] = useState(''); // get props\n\n  const wordToGuess = props.wordToGuess;\n  const gameStarted = props.gameStarted;\n  const alphabet = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm'];\n  const abc1 = alphabet.slice(0, 10);\n  const abc2 = alphabet.slice(10, 19);\n  const abc3 = alphabet.slice(19); // get selected letters from the child component\n\n  const getLetters = ltrs => {\n    setLetters(letters.concat(ltrs));\n\n    if (letters.length === 5) {\n      props.callback(ltrs);\n    }\n  }; // compare to wordToGuess\n\n\n  const compareToWord = () => {\n    if (letters.toLowerCase() === wordToGuess) {\n      alert('winner');\n    } else {\n      compareToApi();\n    }\n  }; // compare word with the api\n\n\n  const compareToApi = () => {\n    console.log(wordToGuess);\n\n    for (let i = 0; i < words.length; i++) {\n      if (letters.toLowerCase() === words[i]) {\n        compareLetters();\n      }\n    }\n  }; // compare letters in the word\n\n\n  const compareLetters = () => {\n    console.log('compare letters');\n\n    for (let i = 0; i < letters.length; i++) {\n      if (wordToGuess.includes(letters[i].toLowerCase())) {\n        setIncludedLetters(includedLetters.concat(letters[i]));\n      }\n    }\n  };\n\n  const comparePosition = () => {}; // handle submit\n\n\n  const handleSubmit = () => {\n    getLetters();\n    compareToWord();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: [includedLetters, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-first-row\",\n      children: abc1.map((letter, i) => {\n        return /*#__PURE__*/_jsxDEV(Key, {\n          letter: letter.toUpperCase(),\n          letters: letters,\n          callback: getLetters,\n          gameStarted: gameStarted,\n          included: includedLetters\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-second-row\",\n      children: abc2.map((letter, i) => {\n        return /*#__PURE__*/_jsxDEV(Key, {\n          letter: letter.toUpperCase(),\n          letters: letters,\n          callback: getLetters,\n          gameStarted: gameStarted,\n          included: includedLetters\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-third-row\",\n      children: abc3.map((letter, i) => {\n        return /*#__PURE__*/_jsxDEV(Key, {\n          letter: letter.toUpperCase(),\n          letters: letters,\n          callback: getLetters,\n          gameStarted: gameStarted,\n          included: includedLetters\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      onClick: handleSubmit,\n      children: \"Submit Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Keyboard, \"Ou3w6z6Tz9lbWBrmiNo9BM+EN4s=\");\n\n_c = Keyboard;\nexport default Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"sources":["/home/bill/Documents/GitHub/wordle/src/components/Keyboard.js"],"names":["useState","Key","words","Keyboard","props","letters","setLetters","includedLetters","setIncludedLetters","wordToGuess","gameStarted","alphabet","abc1","slice","abc2","abc3","getLetters","ltrs","concat","length","callback","compareToWord","toLowerCase","alert","compareToApi","console","log","i","compareLetters","includes","comparePosition","handleSubmit","map","letter","toUpperCase"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Key from './Key';\nimport words from '../utils/words';\n\nfunction Keyboard(props) {\n    const [letters, setLetters] = useState('');\n    const [includedLetters, setIncludedLetters] = useState('');\n\n    // get props\n    const wordToGuess = props.wordToGuess;\n    const gameStarted = props.gameStarted;\n\n    const alphabet = ['q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m'];\n    const abc1 = alphabet.slice(0, 10);\n    const abc2 = alphabet.slice(10, 19);\n    const abc3 = alphabet.slice(19);\n\n    // get selected letters from the child component\n    const getLetters = (ltrs) => {\n        setLetters(letters.concat(ltrs))\n        if(letters.length === 5) {\n            props.callback(ltrs);\n        }\n    }\n\n    // compare to wordToGuess\n    const compareToWord = () => {\n        if(letters.toLowerCase() === wordToGuess) {\n            alert('winner')\n        } else {\n            compareToApi();\n        }\n    }\n\n    // compare word with the api\n    const compareToApi = () => {\n        console.log(wordToGuess)\n        for(let i = 0; i < words.length; i++) {\n            if(letters.toLowerCase() === words[i]) {\n                compareLetters();\n            }\n        }\n    }\n\n    // compare letters in the word\n    const compareLetters = () => {\n            console.log('compare letters')\n            for(let i = 0; i < letters.length; i++) {\n                if(wordToGuess.includes(letters[i].toLowerCase())) {\n                    setIncludedLetters(includedLetters.concat(letters[i]))\n                }\n            }\n    }\n\n    const comparePosition = () => {\n\n    }\n\n    // handle submit\n    const handleSubmit = () => {\n        getLetters();\n        compareToWord();\n    }\n\n    return(\n        <div className='keyboard'>\n            {includedLetters}\n            <div className='keyboard-first-row'>\n                {abc1.map((letter, i) => {\n                    return <Key key={i} letter={letter.toUpperCase()} letters={letters} callback={getLetters} gameStarted={gameStarted} included={includedLetters}/>\n                })}\n            </div>\n            <div className='keyboard-second-row'>\n                {abc2.map((letter, i) => {\n                    return <Key key={i} letter={letter.toUpperCase()} letters={letters} callback={getLetters} gameStarted={gameStarted} included={includedLetters}/>\n                })}\n            </div>\n            <div className='keyboard-third-row'>\n                {abc3.map((letter, i) => {\n                    return <Key key={i} letter={letter.toUpperCase()} letters={letters} callback={getLetters} gameStarted={gameStarted} included={includedLetters}/>\n                })}\n            </div>\n            <button type='submit' className=\"submit-btn\" onClick={handleSubmit}>Submit Word</button>\n        </div>\n    )\n}\n\nexport default Keyboard;"]},"metadata":{},"sourceType":"module"}